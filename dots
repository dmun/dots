#!/bin/bash

DOTS_DIR="${DOTS_DIR:-$HOME/.dotfiles}"

if [ ! -d $DOTS_DIR ]; then
    echo "directory does not exist: $DOTS_DIR"
    exit 1
fi

files=$(ls -a $DOTS_DIR | grep -Ev '^\.$|^\.\.$|^.git*|^README.md$|^other$')

readonly NO_FORMAT="\033[0m"
readonly F_BOLD="\033[1m"
readonly C_LIME="\033[38;5;10m"
readonly C_RED="\033[38;5;9m"

# shows usage
function usage {
    echo "usage: dots [set <path>] [link] [status]"
}

# check if file is linked
function linked {
    [ -h $XDG_CONFIG_HOME/$1 ] || [ -h $HOME/$1 ]
}

# shows status for dotfiles
function status {
    echo "Using directory $DOTS_DIR $([ $DOTS_DIR == $HOME/.dotfiles ] && echo '(default)')"

    echo -e "\nFiles linked:"
    for file in $files; do
        if linked $file; then
            echo -e "    ${C_LIME}$file${NO_FORMAT}"
        fi
    done

    echo -e "\nFiles unlinked:"
    for file in $files; do
        if ! linked $file; then
            echo -e "    ${C_RED}$file${NO_FORMAT}"
        fi
    done

    echo
}

function resolve_target_dir {
	 if [ -d $DOTS_DIR/$1 ] && [[ ! $1 = .* ]]; then
		  echo $XDG_CONFIG_HOME
    elif [[ $1 = .* ]]; then
		  echo $HOME
    fi
}

# link a dotfile
function link {
	 target_dir=$(resolve_target_dir $1)
	 ln -s $DOTS_DIR/$1 $target_dir/ && echo "created link at $target_dir/$1"
}

# unlink a dotfile
function rmlink {
	 target_dir=$(resolve_target_dir)
	 unlink $target_dir/$1 && echo "removed link at $target_dir/$1"
}

function set {
    if [ -z "$1" ]; then
        echo "missing argument"
        exit 1
    fi

    if [ -d $1 ]; then
        echo $1 > $HOME/.dotsconfig
        echo "done"
    else
        echo "dots set: '$1' is not a valid directory."
        exit 1
    fi
}

# contains all possible commands
case $1 in
    link | l)
        if [ ! $2 ]; then
            for file in $files; do
                if ! linked $file; then
                    link $file
                fi
            done
            echo "done"
        else
            link $2
        fi
    ;;

    unlink | ul)
        if [ ! $2 ]; then
            for file in $files; do
                if linked $file; then
                    rmlink $file
                fi
            done
            echo "done"
        else
            rmlink $2
        fi
    ;;

    set) set $2 ;;
    status) status ;;
    help | "") usage ;;
	 *) echo "dots: '$1' is not a dots command. See 'dots help'." ;;
esac
