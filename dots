#!/bin/bash

if [ ! -f $HOME/.dotsconfig ]; then
    touch $HOME/.dotsconfig
fi
dots_dir=$(cat $HOME/.dotsconfig)
files=$(ls -a $dots_dir | grep -Ev '^\.$|^\.\.$|^.git*|^README.md$|^other$')

# shows usage
usage () {
    echo "usage: dots [set <path>] [link] [status]"
}

# check if file is linked
linked () {
    [ -h $HOME/.config/$1 ] || [ -h $HOME/$1 ]
}

# shows status for dotfiles
status () {
    for file in $files; do
        if linked $file; then
            echo -e "$(tput bold)\e[36m$file\e[0m@"
        else
            echo $file
        fi
    done
}

# link a dotfile
link () {
    if [ -d $dots_dir/$1 ] && [[ ! $1 = .* ]]; then
        ln -s $dots_dir/$1 $HOME/.config/ && echo "created link at $HOME/.config/$1"
    elif [[ $1 = .* ]]; then
        ln -s $dots_dir/$1 $HOME/ && echo "created link at $HOME/$1"
    fi
}

# unlink a dotfile
rmlink () {
    if [ -d $dots_dir/$1 ] && [[ ! $1 = .* ]]; then
        unlink $HOME/.config/$1 && echo "unlinked $HOME/.config/$1"
    elif [[ $1 = .* ]]; then
        unlink $HOME/$1 && echo "unlinked $HOME/$1"
    fi
}

# contains all possible commands
case $1 in
    link | l)
        if [ ! $2 ]; then
            for file in $files; do
                if ! linked $file; then
                    link $file
                fi
            done
            echo "done!"
        else
            link $2
        fi
    ;;

    unlink | ul)
        if [ ! $2 ]; then
            for file in $files; do
                if linked $file; then
                    rmlink $file
                fi
            done
            echo "done!"
        else
            rmlink $2
        fi
    ;;

    set)
        if [ $2 ]; then
            echo $2 > $HOME/.dotsconfig
        else
            echo "missing argument"
        fi
    ;;

    status | list | ls)
        status
    ;;

    *)
        usage
    ;;
esac
